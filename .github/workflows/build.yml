name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'latest'

      - name: Install dependencies
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
          echo "$TIMESTAMP [INFO] - Installing dependencies..."
          
          if flutter pub get; then
            TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
            echo "$TIMESTAMP [INFO] - Dependencies installed successfully."
          else
            TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
            echo "$TIMESTAMP [ERROR] - Dependency installation failed!"
            exit 1
          fi

      - name: Clean project
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
          echo "$TIMESTAMP [INFO] - Cleaning project..."
          
          if flutter clean; then
            TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
            echo "$TIMESTAMP [INFO] - Clean successful."
          else
            TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
            echo "$TIMESTAMP [WARNING] - Clean operation failed, continuing..."
          fi

      - name: Build APK
        id: build_apk
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
          echo "$TIMESTAMP [INFO] - Starting APK build process..."

          MAX_RETRIES=3
          RETRY_DELAY=2

          for i in $(seq 1 $MAX_RETRIES); do
            TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
            echo "$TIMESTAMP [INFO] - Build attempt $i..."

            if flutter build apk --split-per-abi --verbose; then
              TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
              echo "$TIMESTAMP [INFO] - Build completed successfully."
              exit 0
            else
              TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
              echo "$TIMESTAMP [WARNING] - Build failed on attempt $i."
              
              if [ $i -lt $MAX_RETRIES ]; then
                echo "$TIMESTAMP [INFO] - Retrying in $((RETRY_DELAY ** i)) seconds..."
                sleep $((RETRY_DELAY ** i))
              else
                echo "$TIMESTAMP [ERROR] - Build failed after $MAX_RETRIES attempts!"
                exit 1
              fi
            fi
          done

      - name: Check build directory
        if: success()
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
          echo "$TIMESTAMP [INFO] - Checking build output directories..."
          
          if ls build/app/outputs/apk/**/*.apk 2>/dev/null; then
            TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
            echo "$TIMESTAMP [INFO] - APK files found."
          else
            TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
            echo "$TIMESTAMP [ERROR] - No APK files found!"
            exit 1
          fi

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            build/app/outputs/apk/release/*.apk
            build/app/outputs/bundle/release/*.aab
            build/app/outputs/flutter-apk/*.apk

      - name: Print Environment Variables
        if: success()
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
          echo "$TIMESTAMP [INFO] - Printing environment variables..."
          printenv

      - name: Handle Build Errors and Notify
        if: failure()
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
          echo "$TIMESTAMP [ERROR] - Build process failed. Please check logs for details."

      - name: Notify on Success
        if: success()
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
          echo "$TIMESTAMP [INFO] - Build succeeded!"
